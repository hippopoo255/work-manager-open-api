openapi: 3.0.2
info:
  description: 主な機能：\ \     議事録の記録 \ スケジュール管理・共有 \ ファイル共有 \ チャット \ Task管理等 \ \ key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: 業務支援システム
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:8080/api"
    description: Laravelのローカルserver
tags:
  - name: user
    description: employees
  - name: admin
    description: system administrator
  - name: blog
    description: blog
  - name: chat_room
    description: chat room
  - name: chat_message
    description: chat message
  - name: document_folder
    description: document_folder
  - name: document_file
    description: document_file
  - name: task
    description: task
  - name: meeting_record
    description: meeting record
  - name: schedule
    description: schedule
paths:
  /admin/current:
    get:
      tags:
        - admin
      description: return current admin
      operationId: getCurrentAdmin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Admin"
                  - nullable: true
      summary: 現在の管理者を返す
  /admin/login:
    post:
      tags:
        - admin
      description: return admin auth by login_id and password
      operationId: postAdminLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
        "422":
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      summary: 管理者ログイン
  /admin/logout:
    post:
      tags:
        - admin
      description: return logout by login_id and password
      operationId: postAdminLogout
      responses:
        "200":
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyItem"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      summary: 管理者ログアウト
  /author/blog:
    get:
      security:
        - cookieAuth: []
      operationId: getMyBlog
      description: blog user joined
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Blog"
                  - $ref: "#/components/schemas/EmptyItem"
      tags:
        - blog
      parameters:
        - schema:
            type: string
          in: query
          name: created_by
          description: ユーザーコード
        - schema:
            type: integer
          in: query
          name: page
          description: ページ
      summary: 認証者が閲覧できるブログ
    parameters: []
  /author/task:
    get:
      security:
        - cookieAuth: []
      operationId: getTask
      description: 認証者のタスク
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/TaskPage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      parameters:
        - schema:
            type: integer
          in: query
          name: prioriy_id
          description: 優先度
        - schema:
            type: integer
          in: query
          name: progress_id
          description: 進捗度
      summary: 認証者のタスク
      tags:
        - task
    parameters: []
  /author/chat_room:
    get:
      security:
        - cookieAuth: []
      tags:
        - chat_room
      operationId: getChatRoom
      description: chat rooms user joined
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatRoom"
          headers: {}
      summary: 認証者のチャットルーム取得
  /author/meeting_record:
    get:
      security:
        - cookieAuth: []
      tags:
        - meeting_record
      operationId: getMeetingRecord
      description: meeting record user joined
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/EmptyItem"
                  - $ref: "#/components/schemas/MeetingPage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      summary: 認証者の会議議事録一覧
  /blog:
    parameters: []
    post:
      summary: ブログの新規投稿
      operationId: postBlog
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: ブログの新規投稿
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BlogForm"
          text/plain:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              $ref: "#/components/schemas/BlogForm"
        description: ""
      security:
        - cookieAuth: []
      tags:
        - blog
    get:
      summary: ブログ一覧ページ
      operationId: getBlog
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPage"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      parameters:
        - schema:
            type: string
          in: query
          name: "tag:name"
          description: タグ名で検索
      description: ブログ一覧ページ
      tags:
        - blog
  "/blog/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ブログの詳細表示
      operationId: getBlogId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ブログの詳細表示
      security:
        - cookieAuth: []
      tags:
        - blog
    put:
      summary: ブログの更新
      operationId: putBlogId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/BlogForm"
      description: ブログの更新
      tags:
        - chat_room
      security:
        - cookieAuth: []
    delete:
      summary: ブログの削除
      operationId: deleteBlogId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
            application/xml:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ブログの削除
      security:
        - cookieAuth: []
      tags:
        - blog
  "/blog/{id}/like":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ブログに対するいいね
      operationId: putBlogIdLike
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blog"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      description: ブログに対するいいね
      tags:
        - blog
    delete:
      summary: ブログに対するいいね解除
      operationId: deleteBlogIdLike
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Blog"
      description: ブログに対するいいね解除
      tags:
        - blog
  "/blog/{blog_id}/comment":
    parameters:
      - schema:
          type: string
        name: blog_id
        in: path
        required: true
    post:
      summary: ブログへのコメント投稿
      operationId: postBlogIdComment
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogComment"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      tags:
        - blog
      description: ブログへのコメント投稿
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogCommentForm"
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
        description: ""
  "/blog/{blog_id}/comment/{id}":
    parameters:
      - schema:
          type: string
        name: blog_id
        in: path
        required: true
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: ブログコメントの更新
      operationId: putBlogIdComment
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogComment"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogCommentForm"
      description: ブログコメントの更新
      security:
        - cookieAuth: []
      tags:
        - blog
    delete:
      summary: ブログコメントの削除
      operationId: deleteBlogIdComment
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
            application/xml:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ブログコメントの削除
      security:
        - cookieAuth: []
      tags:
        - blog
  /chat_room:
    parameters: []
    post:
      summary: チャットルームの作成
      operationId: postChatRoom
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatRoom"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: チャットルームの新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRoomForm"
          text/plain:
            schema:
              type: object
              properties: {}
        description: チャットルームの投稿フォーム
      tags:
        - chat_room
      security:
        - cookieAuth: []
  "/chat_room/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: チャットルームの詳細表示
      operationId: getChatRoomId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatRoom"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: チャットルームのリストをクリックした時等
      tags:
        - chat_room
      security:
        - cookieAuth: []
    put:
      summary: チャットルームの更新
      operationId: putChatRoomId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatRoom"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRoomForm"
      description: ルーム名を変えたいなど
      tags:
        - chat_room
      security:
        - cookieAuth: []
    delete:
      summary: チャットルームの削除
      operationId: deleteChatRoomId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
            application/xml:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: チャットルームの削除
      tags:
        - chat_room
      security:
        - cookieAuth: []
  "/chat_room/{id}/member/{member_id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: member_id
        in: path
        required: true
    delete:
      summary: チャットルームメンバーの削除
      operationId: deleteChatMemberId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: メンバー自身が退室する、管理者が除名する等
      tags:
        - chat_room
      security:
        - cookieAuth: []
  "/chat_room/{id}/message":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: チャットメッセージの追加
      operationId: postChatMessage
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: チャットメッセージの追加
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessageForm"
          application/xml:
            schema:
              type: object
              properties: {}
        description: ""
      tags:
        - chat_message
        - chat_room
      security:
        - cookieAuth: []
  "/chat_room/{id}/message/{message_id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: message_id
        in: path
        required: true
    put:
      summary: チャットメッセージの更新
      operationId: putChatMessageId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: チャットメッセージの更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessageForm"
      tags:
        - chat_message
        - chat_room
      security:
        - cookieAuth: []
    delete:
      summary: チャットメッセージの削除
      operationId: deleteChatMessageId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: チャットメッセージの削除
      tags:
        - chat_message
        - chat_room
      security:
        - cookieAuth: []
  /document_folder:
    parameters: []
    post:
      summary: ドキュメントフォルダの新規作成
      operationId: postDocumentFolder
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentFolder"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: ドキュメントフォルダの新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentFolderForm"
          text/plain:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: チャットルームの投稿フォーム
      security:
        - cookieAuth: []
      tags:
        - document_folder
    get:
      summary: ドキュメントフォルダ一覧
      operationId: getDocumentFolder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/DocumentFolder"
                  - $ref: "#/components/schemas/EmptyItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
            application/xml:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      security:
        - cookieAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
      description: ドキュメントフォルダ一覧
      tags:
        - document_folder
  "/document_folder/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ドキュメントフォルダの詳細
      operationId: getDocumentFolderId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentFolder"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ドキュメントフォルダの詳細
      security:
        - cookieAuth: []
      tags:
        - document_folder
    put:
      summary: ドキュメントフォルダの更新
      operationId: putDocumentFolderId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentFolder"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentFolderForm"
          application/xml:
            schema:
              type: object
              properties: {}
      description: ドキュメントフォルダの更新
      security:
        - cookieAuth: []
      tags:
        - document_folder
    delete:
      summary: ドキュメントフォルダの削除
      operationId: deleteDocumentFolderId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
            application/xml:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ドキュメントフォルダの削除
      security:
        - cookieAuth: []
      tags:
        - document_folder
  "/document_folder/{folder_id}/document_file":
    parameters:
      - schema:
          type: string
        name: folder_id
        in: path
        required: true
    post:
      summary: ドキュメントファイルの新規作成
      operationId: postDocumentFile
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentFile"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: ドキュメントファイルの新規作成
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DocumentFileForm"
          text/plain:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: チャットルームの投稿フォーム
      security:
        - cookieAuth: []
      tags:
        - document_folder
    get:
      summary: ドキュメントファイル一覧
      operationId: getDocumentFile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/DocumentFolder"
                  - $ref: "#/components/schemas/EmptyItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
            application/xml:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      security:
        - cookieAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
      description: ドキュメントファイル一覧
      tags:
        - document_folder
        - document_file
  "/document_folder/{folder_id}/document_file/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: folder_id
        in: path
        required: true
    get:
      summary: ドキュメントファイルの詳細
      operationId: getDocumentFileId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentFile"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ドキュメントファイルの詳細
      security:
        - cookieAuth: []
      tags:
        - document_folder
        - document_file
    put:
      summary: ドキュメントフォルダの更新
      operationId: putDocumentFileId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentFile"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DocumentFileForm"
          application/xml:
            schema:
              type: object
              properties: {}
      description: ドキュメントファイルの更新
      security:
        - cookieAuth: []
      tags:
        - document_folder
        - document_file
    delete:
      summary: ドキュメントファイルの削除
      operationId: deleteDocumentFileId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
            application/xml:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: ドキュメントファイルの削除
      security:
        - cookieAuth: []
      tags:
        - document_folder
        - document_file
  /login:
    post:
      tags:
        - user
      description: return auth by login_id and password
      operationId: postLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: laravel_session
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      summary: ユーザーログイン
  /logout:
    post:
      tags:
        - user
      description: return logout by login_id and password
      operationId: postLogout
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyItem"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      summary: ユーザーログアウト
  /meeting_record:
    post:
      summary: 会議議事録の投稿
      tags:
        - meeting_record
        - task
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingRecord"
        "400":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      operationId: postMeetingRecord
      description: 議事録の新規投稿
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingRecordForm"
        description: 議事録投稿フォーム
    parameters: []
  "/meeting_record/{id}":
    put:
      summary: 会議議事録の更新
      operationId: putMeetingRecordId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingRecord"
        "400":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "422":
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      security:
        - cookieAuth: []
      description: 議事録の更新フォーム
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingRecordForm"
      tags:
        - meeting_record
        - task
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: 会議議事録ID
    get:
      summary: 会議議事録の詳細表示
      operationId: getMeetingRecordId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingRecord"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      security:
        - cookieAuth: []
      description: 会議議事録の詳細情報取得
      tags:
        - meeting_record
        - task
    delete:
      summary: 会議議事録の削除
      operationId: deleteMeetingRecordId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingPage"
        "204":
          description: DELETE
          content:
            application/json:
              schema:
                nullable: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
      description: 議事録の削除
      security:
        - cookieAuth: []
      tags:
        - meeting_record
        - task
  /schedule:
    parameters: []
    post:
      summary: スケジュールの作成
      operationId: postSchedule
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: スケジュールの新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleForm"
          text/plain:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: チャットルームの投稿フォーム
      tags:
        - chat_room
      security:
        - cookieAuth: []
    get:
      summary: みんなのデイリースケジュール
      operationId: getSchedule
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Schedule"
                  - $ref: "#/components/schemas/EmptyItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
            application/xml:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      security:
        - cookieAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: "sharedMembers:department_id"
          description: 部署コード
      description: みんなのデイリースケジュール
      tags:
        - schedule
  "/schedule/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: スケジュールの詳細表示
      operationId: getScheduleId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: スケジュールの詳細表示
      security:
        - cookieAuth: []
      tags:
        - schedule
    put:
      summary: スケジュールの更新
      operationId: putScheduleId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleForm"
      description: スケジュールの更新
      security:
        - cookieAuth: []
      tags:
        - schedule
    delete:
      summary: スケジュールの削除
      operationId: deleteScheduleId
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
            application/xml:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      description: スケジュールの削除
      security:
        - cookieAuth: []
      tags:
        - schedule
  /task:
    parameters: []
    post:
      summary: タスクの新規投稿
      operationId: postTask
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: タスクの新規投稿
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskForm"
        description: ""
      tags:
        - task
  "/task/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: タスクの更新
      operationId: putTaskId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "422":
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidError"
      description: タスクの更新
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskForm"
      tags:
        - task
    delete:
      summary: タスクの削除
      operationId: deleteTaskId
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
      description: タスクの削除
      security:
        - cookieAuth: []
      tags:
        - task
  /user:
    get:
      tags:
        - user
      summary: ユーザー一覧を返す
      description: 会議の参加者を入力するドロップダウンリスト等に使用
      operationId: getUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - nullable: true
                  - $ref: "#/components/schemas/User"
    parameters: []
  /user/current:
    get:
      tags:
        - user
      summary: 現在のユーザーを返す
      description: return current auth object
      operationId: getCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - nullable: true
                  - $ref: "#/components/schemas/User"
  "/user/{user_id}/schedule":
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    get:
      summary: 特定のユーザのスケジュール一覧
      operationId: getUserIdSchedule
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Schedule"
                  - $ref: "#/components/schemas/EmptyItem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
            application/xml:
              schema:
                $ref: "#/components/schemas/DefaultError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultError"
      security:
        - cookieAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: "sharedMembers:department_id"
          description: 部署コード
      description: 特定のユーザのスケジュール一覧
      tags:
        - schedule
        - user
components:
  schemas:
    Admin:
      title: Admin
      type: object
      description: 認証時のデータ
      required:
        - id
        - full_name
        - created_at
        - updated_at
      properties:
        id:
          description: ユーザーID
          type: integer
        full_name:
          description: フルネーム
          type: string
          example: 管理者 太郎
        given_name:
          description: 名
          type: string
          example: 太郎
        family_name:
          description: 姓
          type: string
          example: 管理者
        file_path:
          nullable: true
          description: ファイルパス
          type: string
          example: admins/test1.jpg
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
    Blog:
      title: Blog
      description: ブログ
      type: object
      properties:
        id:
          type: integer
          format: int64
        created_by:
          $ref: "#/components/schemas/User"
        title:
          type: string
          description: タイトル
        body:
          type: string
          description: 記事の内容
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
        images:
          anyOf:
            - items:
                $ref: "#/components/schemas/BlogImage"
          type: array
        likes:
          anyOf:
            - items:
                $ref: "#/components/schemas/User"
          type: array
        comments:
          anyOf:
            - items:
                $ref: "#/components/schemas/BlogComment"
          type: array
        tags:
          anyOf:
            - items:
                $ref: "#/components/schemas/Tag"
          type: array
      required:
        - id
        - created_by
        - title
        - body
        - created_at
        - updated_at
        - likes
        - comments
        - tags
    BlogComment:
      title: BlogComment
      description: ブログへのコメント
      type: object
      properties:
        id:
          type: integer
          format: int64
        blog_id:
          type: integer
          format: int64
        created_by:
          $ref: "#/components/schemas/User"
        body:
          type: string
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - blog_id
        - created_by
        - body
        - created_at
        - updated_at
    BlogCommentForm:
      title: BlogCommentForm
      description: Blogのコメントフォーム
      type: object
      properties:
        created_by:
          type: integer
          format: int64
          example: 1
          minimum: 0
        body:
          type: string
      required:
        - created_by
        - body
    BlogForm:
      title: BlogForm
      description: Blogの投稿フォーム
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        created_by:
          type: integer
          format: int64
          example: 1
          minimum: 0
        images:
          type: array
          items:
            type: object
            nullable: true
        file_paths:
          type: array
          description: 初投稿時はなくても良い
          items:
            type: string
            nullable: true
        tags:
          type: array
          items:
            type: integer
            nullable: true
      required:
        - title
        - body
    BlogImage:
      title: BlogImage
      description: ブログ画像
      type: object
      properties:
        id:
          type: integer
          format: int64
        blog_id:
          type: integer
          format: int64
        file_path:
          type: string
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - blog_id
        - file_path
        - created_at
        - updated_at
    BlogPage:
      title: BlogPage
      description: ブログ一覧のページ（ページャつき）
      type: object
      x-examples:
        example-1:
          value:
            data:
              - id: 0
                created_by:
                  id: 0
                  full_name: テスト 太郎
                  given_name: 太郎
                  family_name: テスト
                  file_path: users/test1.jpg
                  created_at: "2021-12-31 12:00:00"
                  updated_at: "2021-12-31 12:00:00"
                meeting_date: "2021-12-31 12:00:00"
                place: string
                title: 〇〇会議
                summary: 〇〇会議の概要
                members:
                  - id: 0
                    full_name: テスト 太郎
                    given_name: 太郎
                    family_name: テスト
                    file_path: users/test1.jpg
                    created_at: "2021-12-31 12:00:00"
                    updated_at: "2021-12-31 12:00:00"
                decisions: []
                created_at: "2021-12-31 12:00:00"
                updated_at: "2021-12-31 12:00:00"
            first_page_url: string
            from: 0
            last_page: 0
            last_page_url: string
            next_page_url: string
            path: string
            per_page: 0
            prev_page_url: string
            to: 0
            total: 0
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Blog"
        first_page_url:
          description: 1ページ目のURL
          type: string
        from:
          description: 現在のitemの開始位置
          type: integer
          nullable: true
        last_page:
          description: 最大ページ数
          type: integer
        last_page_url:
          description: 最終ページのURL
          type: string
        next_page_url:
          description: 次ページのURL
          type: string
          nullable: true
        path:
          description: 前ページのURL
          type: string
        per_page:
          description: 1ページあたりのアイテム数
          type: integer
        prev_page_url:
          description: 前ページのURL
          type: string
          nullable: true
        to:
          description: 現在のitemの終了位置
          type: integer
          nullable: true
        total:
          description: item総数
          type: integer
      required:
        - data
        - first_page_url
        - from
        - last_page
        - last_page_url
        - next_page_url
        - path
        - per_page
        - prev_page_url
        - to
        - total
    ChatMessage:
      title: ChatMessage
      description: チャットメッセージ
      type: object
      properties:
        id:
          type: integer
          format: int64
        body:
          type: string
        created_by:
          $ref: "#/components/schemas/User"
        to:
          anyOf:
            - type: string
              nullable: true
            - $ref: "#/components/schemas/User"
        images:
          anyOf:
            - items:
                $ref: "#/components/schemas/ChatMessageImage"
          type: array
        reactions:
          anyOf:
            - items:
                $ref: "#/components/schemas/Reaction"
          type: array
        chat_message_reads:
          anyOf:
            - items:
                $ref: "#/components/schemas/User"
          type: array
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
        mine:
          type: boolean
          nullable: true
      required:
        - id
        - body
        - created_by
        - created_at
        - updated_at
    ChatMessageForm:
      title: ChatMessageForm
      description: ChatMessageの投稿フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        created_by:
          type: integer
          format: int64
          example: 1
        mentioned_to:
          type: integer
          format: int64
          example: 1
          nullable: true
        body:
          type: string
        files:
          type: array
          maxItems: 5
          minItems: 0
          items:
            type: object
            nullable: true
      required:
        - created_by
        - mentioned_to
        - body
    ChatMessageImage:
      title: ChatMessageImage
      description: チャット画像
      required:
        - id
        - file_path
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        chat_message_id:
          type: integer
          format: int64
        file_path:
          type: string
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
    ChatMessageRead:
      title: ChatMessageRead
      description: 既読
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        chat_message_id:
          type: integer
          description: 権限値
          format: int64
          example: 0
          minimum: 0
        member:
          $ref: "#/components/schemas/User"
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - chat_message_id
        - member
        - created_at
        - updated_at
    ChatRoom:
      title: ChatRoom
      description: チャットルーム
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        members:
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/User"
        messages:
          anyOf:
            - items:
                $ref: "#/components/schemas/ChatMessage"
          type: array
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
        last_reads:
          anyOf:
            - items:
                $ref: "#/components/schemas/LastRead"
          type: array
        unread_count:
          type: integer
          example: 0
          minimum: 0
      required:
        - id
        - name
        - members
        - messages
        - created_at
        - updated_at
    ChatRoomForm:
      title: ChatRoomForm
      description: ChatRoomの投稿フォーム
      type: object
      properties:
        created_by:
          type: integer
          format: int64
          example: 1
          nullable: true
        name:
          type: string
          nullable: true
        members:
          type: object
      required:
        - created_by
        - name
    DateFormat:
      type: string
      format: date-time
      example: "2021-12-31 12:00:00"
    DefaultError:
      title: DefaultError
      description: DefaultError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
    DocumentFile:
      title: DocumentFile
      description: ドキュメントファイル
      type: object
      x-examples:
        example-1:
          value:
            id: 0
            created_by:
              id: 0
              full_name: テスト 太郎
              given_name: 太郎
              family_name: テスト
              file_path: users/test1.jpg
              created_at: "2021-12-31 12:00:00"
              updated_at: "2021-12-31 12:00:00"
            file_path: string
            created_at: "2021-12-31 12:00:00"
            updated_at: "2021-12-31 12:00:00"
            shared_members:
              - id: 0
                full_name: テスト 太郎
                given_name: 太郎
                family_name: テスト
                file_path: users/test1.jpg
                created_at: "2021-12-31 12:00:00"
                updated_at: "2021-12-31 12:00:00"
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        created_by:
          $ref: "#/components/schemas/User"
        file_path:
          type: string
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
        shared_members:
          anyOf:
            - items:
                $ref: "#/components/schemas/User"
          type: array
      required:
        - id
        - created_by
        - file_path
        - created_at
        - updated_at
    DocumentFileForm:
      title: DocumentFileForm
      description: DocumentFileの投稿フォーム
      type: object
      properties:
        created_by:
          type: integer
          format: int64
          example: 1
          minimum: 0
        file:
          type: string
        sharedMembers:
          type: object
        file_path:
          type: string
          description: 更新時のみ
      required:
        - created_by
        - file
    DocumentFolder:
      title: DocumentFolder
      description: ドキュメントフォルダ
      type: object
      x-examples:
        example-1:
          value:
            id: 0
            created_by:
              id: 0
              full_name: テスト 太郎
              given_name: 太郎
              family_name: テスト
              file_path: users/test1.jpg
              created_at: "2021-12-31 12:00:00"
              updated_at: "2021-12-31 12:00:00"
            name: string
            role:
              id: 0
              name: string
              value: 0
              created_at: "2021-12-31 12:00:00"
              updated_at: "2021-12-31 12:00:00"
            created_at: "2021-12-31 12:00:00"
            updated_at: "2021-12-31 12:00:00"
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        created_by:
          $ref: "#/components/schemas/User"
        name:
          type: string
        role:
          anyOf:
            - $ref: "#/components/schemas/Role"
            - properties: {}
              nullable: true
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - created_by
        - name
        - created_at
        - updated_at
    DocumentFolderForm:
      title: DocumentFolderForm
      description: DocumentFolderの投稿フォーム
      type: object
      properties:
        created_by:
          type: integer
          format: int64
          example: 1
          minimum: 0
        name:
          type: string
          format: int64
        role_id:
          type: integer
          format: date-time
          example: 0
      required:
        - name
    EmptyItem:
      title: EmptyItem
      description: データがないときの空配列
      type: array
      items:
        nullable: true
    ForbiddenError:
      title: ForbiddenError
      description: ForbiddenError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
    FacialExpression:
      title: FacialExpression
      description: FacialExpression
      type: object
      x-examples:
        example-1:
          value:
            id: 0
            name: smile
            file_path: file/to/path
      properties:
        id:
          type: integer
          description: エラーメッセージ
          format: int64
          minimum: 0
        name:
          type: string
        file_path:
          type: string
      required:
        - id
        - name
        - file_path
    InvalidError:
      title: InvalidError
      description: InvalidError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
        errors:
          description: フォームアイテムごとのエラーメッセージ
          type: object
          additionalProperties: {}
    LoginBody:
      title: LoginBody
      description: ログインIDとパスワードのフォーム
      required:
        - login_id
        - password
      type: object
      properties:
        login_id:
          type: string
          example: testman1
        password:
          type: string
          format: password
          example: password
    LastRead:
      title: LastRead
      description: ユーザごとの最後に読んだメッセージ
      type: object
      properties:
        id:
          type: integer
          example: 0
          format: int64
          minimum: 0
        chat_room_id:
          type: integer
          format: int64
          example: 0
          minimum: 0
        member_id:
          type: integer
          format: int64
          minimum: 0
          example: 0
        last_message_id:
          type: integer
          format: int64
          minimum: 0
          example: 0
        created_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - chat_room_id
        - member_id
        - last_message_id
    MeetingDecision:
      title: MeetingDecision
      description: ミーティング決定事項
      type: object
      properties:
        id:
          type: integer
          format: int64
        decided_by:
          $ref: "#/components/schemas/User"
        created_by:
          $ref: "#/components/schemas/User"
        subject:
          type: string
        body:
          type: string
        tasks:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/Task"
              - $ref: "#/components/schemas/EmptyItem"
      required:
        - id
        - decided_by
        - created_by
        - subject
        - body
    MeetingDecisionForm:
      title: MeetingDecisionForm
      description: ミーティング決定事項フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        decided_by:
          type: integer
          example: 1
          format: int64
          nullable: true
        created_by:
          type: integer
          example: 1
          minimum: 0
          format: int64
        subject:
          type: string
          example: 〇〇について
          nullable: true
        body:
          type: string
          example: 来月から〇〇とする
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskForm"
        flag:
          type: integer
          nullable: true
      required:
        - created_by
        - body
    MeetingPage:
      title: MeetingPage
      description: 議事録一覧のページ（ページャつき）
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/MeetingRecord"
        first_page_url:
          description: 1ページ目のURL
          type: string
        from:
          description: 現在のitemの開始位置
          type: integer
          nullable: true
        last_page:
          description: 最大ページ数
          type: integer
        last_page_url:
          description: 最終ページのURL
          type: string
        next_page_url:
          description: 次ページのURL
          type: string
          nullable: true
        path:
          description: 前ページのURL
          type: string
        per_page:
          description: 1ページあたりのアイテム数
          type: integer
        prev_page_url:
          description: 前ページのURL
          type: string
          nullable: true
        to:
          description: 現在のitemの終了位置
          type: integer
          nullable: true
        total:
          description: item総数
          type: integer
      required:
        - data
        - first_page_url
        - from
        - last_page
        - last_page_url
        - next_page_url
        - path
        - per_page
        - prev_page_url
        - to
        - total
    MeetingPlace:
      title: MeetingPlace
      description: ミーティング開催場所
      required:
        - id
        - name
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
    MeetingRecord:
      title: MeetingRecord
      description: ミーティングレコード
      type: object
      properties:
        id:
          type: integer
          format: int64
        created_by:
          $ref: "#/components/schemas/User"
        meeting_date:
          $ref: "#/components/schemas/DateFormat"
        place:
          anyOf:
            - type: string
              nullable: true
            - $ref: "#/components/schemas/MeetingPlace"
        title:
          type: string
          example: 〇〇会議
        summary:
          type: string
          example: 〇〇会議の概要
          nullable: true
        members:
          type: array
          items:
            $ref: "#/components/schemas/User"
        decisions:
          anyOf:
            - $ref: "#/components/schemas/EmptyItem"
            - type: array
              items:
                $ref: "#/components/schemas/MeetingDecision"
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - created_by
        - meeting_date
        - place
        - title
        - summary
        - members
        - decisions
        - created_at
        - updated_at
    MeetingRecordForm:
      title: MeetingRecordForm
      description: 会議議事録投稿フォーム
      type: object
      properties:
        created_by:
          type: integer
          example: 1
          format: int64
          minimum: 0
        place_id:
          type: integer
          format: int64
          example: 1
          nullable: true
        meeting_date:
          $ref: "#/components/schemas/DateFormat"
        title:
          type: string
          example: 全体会議
        summary:
          type: string
          example: これは全体の会議です。
          nullable: true
        meeting_decisions:
          example: []
          type: array
          items:
            $ref: "#/components/schemas/MeetingDecisionForm"
        members:
          type: array
          items:
            type: integer
      required:
        - created_by
        - meeting_date
        - title
    MemberForm:
      title: MemberForm
      description: 共有相手用フォーム
      type: object
      properties:
        created_by:
          type: integer
          example: 1
          format: int64
          minimum: 0
        place_id:
          type: integer
          format: int64
          example: 1
          nullable: true
        meeting_date:
          $ref: "#/components/schemas/DateFormat"
        title:
          type: string
          example: 全体会議
        summary:
          type: string
          example: これは全体の会議です。
          nullable: true
        meeting_decisions:
          example: []
          type: array
          items:
            $ref: "#/components/schemas/MeetingDecisionForm"
        members:
          type: array
          items:
            type: integer
      required:
        - created_by
        - meeting_date
        - title
    NotFoundError:
      title: NotFoundError
      description: NotFoundError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
    Priority:
      title: Priority
      description: TODOの優先度
      required:
        - id
        - name
        - value
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          description: 優先度
          type: string
        value:
          description: 優先値
          type: integer
          format: int64
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
    Progress:
      title: Progress
      description: TODOの達成度
      required:
        - id
        - name
        - value
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          description: 達成度
          type: string
        value:
          description: 達成値
          type: integer
          format: int64
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
    Reaction:
      title: Reaction
      description: リアクション
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        chat_message_id:
          type: integer
          description: 権限値
          format: int64
          minimum: 0
        member:
          $ref: "#/components/schemas/User"
        facial_expression:
          $ref: "#/components/schemas/FacialExpression"
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - chat_message_id
        - member
        - facial_expression
        - created_at
        - updated_at
    Role:
      title: Role
      description: ロール
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          description: 権限名
          type: string
        value:
          type: integer
          description: 権限値
          format: int64
          minimum: 0
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - name
        - value
        - created_at
        - updated_at
    Schedule:
      title: Schedule
      description: スケジュール
      type: object
      x-examples:
        example-1:
          value:
            id: 0
            created_by: 0
            title: string
            start: "2019-08-24T14:15:22Z"
            end: "2019-08-24T14:15:22Z"
            is_public: true
            color: string
            messages: []
            shared_members:
              - id: 0
                full_name: テスト 太郎
                given_name: 太郎
                family_name: テスト
                file_path: users/test1.jpg
                created_at: "2021-12-31 12:00:00"
                updated_at: "2021-12-31 12:00:00"
            created_at: "2021-12-31 12:00:00"
            updated_at: "2021-12-31 12:00:00"
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        created_by:
          $ref: "#/components/schemas/User"
        title:
          type: string
        start:
          $ref: "#/components/schemas/DateFormat"
        end:
          $ref: "#/components/schemas/DateFormat"
        is_public:
          type: boolean
          default: true
        color:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        shared_members:
          anyOf:
            - items:
                $ref: "#/components/schemas/User"
          type: array
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - created_by
        - title
        - start
        - end
        - shared_members
        - created_at
        - updated_at
    ScheduleForm:
      title: ScheduleForm
      description: Scheduleの投稿フォーム
      type: object
      properties:
        created_by:
          type: integer
          format: int64
          example: 1
          minimum: 0
        title:
          type: string
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        is_public:
          type: boolean
          format: date-time
          default: true
          nullable: true
        color:
          type: string
          default: "true"
          nullable: true
        memo:
          type: string
          default: "true"
          nullable: true
        sharedMembers:
          type: object
      required:
        - created_by
        - title
        - start
        - end
        - is_public
        - color
        - memo
      x-examples:
        example-1:
          value:
            created_by: 1
            title: string
            start: "2019-08-24T14:15:22Z"
            end: "2019-08-24T14:15:22Z"
            is_public: true
            color: "true"
            memo: "true"
            sharedMembers: {}
    Tag:
      title: Tag
      description: Tag
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - name
        - created_at
        - updated_at
    Task:
      title: Task
      description: Task
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          $ref: "#/components/schemas/User"
        created_by:
          $ref: "#/components/schemas/User"
        priority:
          anyOf:
            - $ref: "#/components/schemas/Priority"
            - properties: {}
              nullable: true
        progress:
          anyOf:
            - $ref: "#/components/schemas/Progress"
            - properties: {}
              nullable: true
        body:
          type: string
        time_limit:
          $ref: "#/components/schemas/DateFormat"
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
      required:
        - id
        - owner
        - created_by
        - priority
        - progress
        - body
        - time_limit
        - created_at
        - updated_at
    TaskForm:
      title: TaskForm
      description: Taskの投稿フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        owner_id:
          type: integer
          format: int64
          example: 1
          minimum: 0
        created_by:
          type: integer
          format: int64
          example: 1
        priority_id:
          type: integer
          format: int64
          minimum: 0
          nullable: true
        progress_id:
          type: integer
          format: int64
          minimum: 0
          nullable: true
        body:
          type: string
        time_limit:
          $ref: "#/components/schemas/DateFormat"
        flag:
          type: integer
          nullable: true
      required:
        - owner_id
        - created_by
        - body
        - time_limit
    TaskPage:
      title: TaskPage
      description: タスク一覧のページ（ページャつき）
      type: object
      x-examples:
        example-1:
          value:
            data:
              - id: 0
                created_by:
                  id: 0
                  full_name: テスト 太郎
                  given_name: 太郎
                  family_name: テスト
                  file_path: users/test1.jpg
                  created_at: "2021-12-31 12:00:00"
                  updated_at: "2021-12-31 12:00:00"
                meeting_date: "2021-12-31 12:00:00"
                place: string
                title: 〇〇会議
                summary: 〇〇会議の概要
                members:
                  - id: 0
                    full_name: テスト 太郎
                    given_name: 太郎
                    family_name: テスト
                    file_path: users/test1.jpg
                    created_at: "2021-12-31 12:00:00"
                    updated_at: "2021-12-31 12:00:00"
                decisions: []
                created_at: "2021-12-31 12:00:00"
                updated_at: "2021-12-31 12:00:00"
            first_page_url: string
            from: 0
            last_page: 0
            last_page_url: string
            next_page_url: string
            path: string
            per_page: 0
            prev_page_url: string
            to: 0
            total: 0
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        first_page_url:
          description: 1ページ目のURL
          type: string
        from:
          description: 現在のitemの開始位置
          type: integer
          nullable: true
        last_page:
          description: 最大ページ数
          type: integer
        last_page_url:
          description: 最終ページのURL
          type: string
        next_page_url:
          description: 次ページのURL
          type: string
          nullable: true
        path:
          description: 前ページのURL
          type: string
        per_page:
          description: 1ページあたりのアイテム数
          type: integer
        prev_page_url:
          description: 前ページのURL
          type: string
          nullable: true
        to:
          description: 現在のitemの終了位置
          type: integer
          nullable: true
        total:
          description: item総数
          type: integer
      required:
        - data
        - first_page_url
        - from
        - last_page
        - last_page_url
        - next_page_url
        - path
        - per_page
        - prev_page_url
        - to
        - total
    User:
      title: User
      description: ユーザーのデータ
      type: object
      required:
        - id
        - full_name
        - created_at
        - updated_at
      properties:
        id:
          description: ユーザーID
          type: integer
        full_name:
          description: フルネーム
          type: string
          example: テスト 太郎
        given_name:
          description: 名
          type: string
          example: 太郎
        family_name:
          description: 姓
          type: string
          example: テスト
        file_path:
          nullable: true
          description: ファイルパス
          type: string
          example: users/test1.jpg
        created_at:
          $ref: "#/components/schemas/DateFormat"
        updated_at:
          $ref: "#/components/schemas/DateFormat"
  securitySchemes:
    cookieAuth:
      name: _session
      type: apiKey
      in: cookie
      description: ""
